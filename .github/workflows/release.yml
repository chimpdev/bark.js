name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm dlx semantic-release
      - name: 'Bark Notification'
        uses: harryzcy/action-bark@v2.2.0
        with:
            status: ${{ job.status }}
            on_status: success, failure, cancelled # only run on these status
            device_key: ${{ secrets.BARK_DEVICE_KEY }}
            bark_server_url: ${{ secrets.BARK_SERVER_URL }}
            title: "${{ github.event.repository.name }}"
            body: "Release ${{ github.event.repository.name }}@${{ steps.release.outputs.version }}\n${{ github.event.head_commit.message }}\nRelease ${{ job.status }}."
            url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            copy: true
        if: always()